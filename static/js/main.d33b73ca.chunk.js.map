{"version":3,"sources":["hoc/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngridient/BurgerIngridient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummery/OrderSummery.js","components/UI/Spinner/Spinner.js","axios-orders.js","store/actions/orders.js","store/actions/actionTypes.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Order/CheckOutSummary/CheckOutSummary.js","components/UI/Input/Input.js","shared/utility.js","containers/CheckOut/ContactData/ContactData.js","containers/CheckOut/CheckOut.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/orders.js","store/reducers/auth.js","index.js","assets/images/burger-logo.png"],"names":["auxiliary","props","children","logo","react_default","a","createElement","className","classes","Logo","style","height","marginBottom","bottom","src","burgerLogo","alt","navigationItem","NavigationItem","NavLink","to","link","activeClassName","active","exact","navigationItems","NavigationItems","NavigationItem_NavigationItem","isAuth","drawerToggle","DrawerToggle","onClick","open","toolbar","Toolbar","DrawerToggle_DrawerToggle","Logo_Logo","DesktopOnly","NavigationItems_NavigationItems","backdrop","show","Backdrop","clicked","sideDrawer","attachedClasses","SideDrawer","Close","Open","Auxiliary","Backdrop_Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerCloserHandler","_this","setState","sideDrawerToggleHandler","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Content","Component","connect","auth","token","BurgerIngridient","ingridient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","tranformedIngridient","Object","keys","ingridients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngridient_BurgerIngridient","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","removeIngridients","Less","addIngridients","More","controls","buildControls","BuildControls","price","toFixed","control","BuildControl_BuildControl","showModal","OrderButton","disabled","purchasable","Modal","nextProps","nextState","showSpinner","transform","opacity","button","Button","btnType","orderSummary","tranformedIngridiients","textTranform","totalPrice","Button_Button","cancel","continue","spinner","loader","instance","axios","create","baseURL","fetch_order_success","res","orders","fetch_order_failed","err","error","auth_start","auth_success","userId","idToken","auth_failed","checkAuthTimeout","expiresIn","dispatch","setTimeout","logout","localStorage","removeItem","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","showModalHandler","history","push","purchaseCancelHandler","purchaseContinuelHandler","onInitPurchased","onInitIngridients","objectSpread","ings","sum","_this2","modal","Spinner_Spinner","UI_Modal_Modal","OrderSummery","tPrice","Burger_Burger","BuildControls_BuildControls","onAddIngridients","onRemoveIngridients","updatePurchaseState","burgerBuilder","ingridientName","actions","toLowerCase","get","then","get_ingridients","data","catch","checkOutSummary","CheckOutSummary","width","margin","onCheckoutCancelled","onCheckoutContinued","input","classValidation","InputElement","inputElement","invalid","touched","Invalid","elementType","assign","onChange","changed","elementConfig","value","options","option","displeyValue","Input","labael","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","required","trim","minLength","maxLength","ContactData","orderForm","name","placeholder","valudation","valid","street","zipCode","country","email","deliveryMethod","formIsValid","orderHandler","e","preventDefault","fromData","formElementIdentifier","order","orderData","onPostOrder","changeInputHandler","event","inputIdentifier","updatesOrderForm","updateFormElement","target","formElementArray","id","config","form","onSubmit","formElement","Input_Input","loading","post","orderId","post_order_failed","withRouter","CheckOut","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","Redirect","purchasedRedirect","purchased","CheckOutSummary_CheckOutSummary","Route","path","match","component","ingridientsName","amount","ingridientsOutput","ig","Order","Orders","console","log","onFetchOrders","Order_Order","quaryParams","Auth","authForm","password","isSingup","submitHandler","onLogIn","updatesAuthForm","swichAuthModeHandler","prevState","errorMessage","message","authResirect","isOrder","pass","isSingUp","authData","returnSecureToken","url","experationDate","Date","getTime","setItem","localId","response","Logout","onLogout","App","onCheckAuth","routes","Switch","BuregerBuilder","LogOut","hoc_Layout_Layout","getItem","Boolean","window","location","hostname","initialState","reducer","arguments","undefined","action","updatedIngridient","defineProperty","updatedState","addIngridient","removeIngridient","getIngridients","postOrder","fetchOrdersSuccess","fetchOrderFailed","purchaseInit","postOrderSuccess","postOrderFailed","postOrderStart","authStart","authSuccess","authFailed","authLogout","rootReducer","combineReducers","burgerBuilderReducer","ordersReducer","AuthReducer","composeEnhancers","compose","store","createStore","applyMiddleware","next","thunk","app","es","BrowserRouter","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d33b73ca.chunk.js","sourcesContent":["const auxiliary = (props)=> props.children\r\n\r\nexport default auxiliary;\r\n","import React from 'react'\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\nimport classes from './Logo.css'\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nconst logo = (props)=>\r\n(\r\n  <div className={classes.Logo} style={{height: props.height, marginBottom: props.bottom }}> \r\n    <img src={burgerLogo} alt=\"MyBurger\"></img>\r\n  </div>\r\n)\r\n\r\nlogo.propTypes={\r\n  height:propTypes.string,\r\n  bottom: propTypes.string\r\n}\r\n\r\nexport default logo","import React from 'react'\r\nimport classes from './NavigationItem.css'\r\nimport propTypes from 'prop-types';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst navigationItem= (props)=>(\r\n  <li className={classes.NavigationItem}>\r\n    <NavLink to={props.link}\r\n    activeClassName={classes.active}\r\n    exact\r\n    >{props.children}\r\n    </NavLink>\r\n  </li>\r\n  )\r\n\r\n  navigationItem.propTypes={\r\n    link: propTypes.string,\r\n    active: propTypes.bool,\r\n    \r\n  }\r\nexport default navigationItem","import React from 'react'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\nimport classes from './NavigationItems.css'\r\n\r\nconst navigationItems= (props)=>(\r\n  <ul className={classes.NavigationItems}>\r\n    <NavigationItem link=\"/\" >Burger Builder</NavigationItem>\r\n    {props.isAuth ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\r\n    {\r\n      !props.isAuth ?\r\n      <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n      :\r\n      <NavigationItem link=\"/logout\">LOGOUT</NavigationItem>\r\n\r\n    }\r\n\r\n  </ul>\r\n)\r\n\r\nexport default navigationItems","import React from 'react';\r\nimport classes from './DrawerToggle.css'\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nconst drawerToggle=(props)=>(\r\n  <div className={classes.DrawerToggle} onClick={props.open}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n)\r\n\r\ndrawerToggle.propTypes={\r\n  open: propTypes.func\r\n}\r\nexport default drawerToggle","import React from 'react'\r\nimport classes from './Toolbar.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nconst toolbar=(props) =>\r\n(\r\n    <header className={classes.Toolbar}>\r\n      <DrawerToggle open={props.open}></DrawerToggle>\r\n      <Logo height=\"80%\"/>\r\n      <nav className={classes.DesktopOnly}>\r\n        <NavigationItems isAuth={props.isAuth}/>\r\n      </nav>\r\n    </header>\r\n)\r\n\r\ntoolbar.propTypes={\r\n  open: propTypes.func\r\n}\r\nexport default toolbar;","import React from 'react'\r\nimport classes from './Backdrop.css'\r\nimport propTypes from 'prop-types';\r\n\r\nconst backdrop=(props)=>{\r\n  \r\n  return ( props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n)}\r\n\r\nbackdrop.propTypes={\r\n  show: propTypes.bool,\r\n  clicked: propTypes.func\r\n}\r\nexport default backdrop","import React from 'react'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport Auxiliary from '../../../hoc/Auxiliary'\r\nimport propTypes from 'prop-types';\r\n\r\nconst sideDrawer= (props)=>{\r\n  \r\n  let attachedClasses=[classes.SideDrawer,classes.Close];\r\n  if(props.open){\r\n    attachedClasses=[classes.SideDrawer,classes.Open];\r\n  }\r\n  return(\r\n    <Auxiliary>\r\n      <Backdrop show={props.open} clicked={props.closed}>\r\n      </Backdrop>\r\n      <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n        <Logo height=\"11%\" bottom=\"32px\"></Logo>\r\n        <nav >\r\n          <NavigationItems isAuth={props.isAuth}></NavigationItems>\r\n        </nav>\r\n      </div>\r\n    </Auxiliary>\r\n  );\r\n}\r\n\r\nsideDrawer.propTypes={\r\n  open: propTypes.bool,\r\n  closed: propTypes.func\r\n}\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport Auxiliary from '../../hoc/Auxiliary'\r\nimport classes from './Layout.css'\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Layout extends Component{\r\n  state={\r\n    showSideDrawer: false\r\n\r\n  }\r\n  sideDrawerCloserHandler=()=>{\r\n    this.setState({\r\n      showSideDrawer:false\r\n    })\r\n  }\r\n\r\n  sideDrawerToggleHandler=()=>{\r\n    this.setState({\r\n      showSideDrawer: !this.state.showSideDrawer\r\n    })\r\n  }\r\n  render(){\r\n    \r\n    return(\r\n      <Auxiliary>\r\n        <Toolbar isAuth={this.props.isAuth} open={this.sideDrawerToggleHandler}></Toolbar>\r\n        <SideDrawer isAuth={this.props.isAuth} open={this.state.showSideDrawer} closed={this.sideDrawerCloserHandler} ></SideDrawer>\r\n        <main className={classes.Content}>\r\n          {\r\n            this.props.children\r\n          }\r\n        </main>\r\n      </Auxiliary>\r\n    \r\n    )\r\n  \r\n  }\r\n  \r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n  return{\r\n    isAuth: state.auth.token !==null\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Layout);","import React,{Component} from 'react'\r\nimport classes from './BurgerIngridient.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass BurgerIngridient extends Component\r\n{\r\n  render(){\r\n    let ingridient= null; \r\n    switch(this.props.type)\r\n    {  \r\n      case('bread-buttom'):\r\n        ingridient=<div className={classes.BreadBottom}></div>\r\n        break;\r\n\r\n      case('bread-top'):\r\n          ingridient=<div className={classes.BreadTop}>\r\n            <div className={classes.Seeds1}></div>\r\n            <div className={classes.Seeds2}></div>\r\n          </div>\r\n          break;\r\n\r\n      case('meat'):\r\n        ingridient=<div className={classes.Meat}></div>\r\n        break;\r\n\r\n      case('cheese'):\r\n        ingridient=<div className={classes.Cheese}></div>\r\n        break;\r\n\r\n      case('salad'):\r\n        ingridient=<div className={classes.Salad}></div>\r\n        break;\r\n\r\n      case('bacon'):\r\n        ingridient=<div className={classes.Bacon}></div>\r\n        break;\r\n\r\n      default: \r\n        ingridient=null;\r\n        break;\r\n      \r\n    \r\n    }\r\n    return ingridient\r\n  }\r\n\r\n}\r\n\r\nBurgerIngridient.propTypes={\r\n  type: PropTypes.string\r\n};\r\nexport default BurgerIngridient","import React from 'react'\r\nimport BurgerIngridient from './BurgerIngridient/BurgerIngridient'\r\nimport classes from './Burger.css'\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nconst burger =(props)=>\r\n{\r\n  let tranformedIngridient= Object.keys(props.ingridients)\r\n  .map(igKey=>{\r\n    return [...Array(props.ingridients[igKey])].map((_, i)=>{\r\n      return <BurgerIngridient key={igKey+i} type={igKey}></BurgerIngridient>\r\n    });\r\n  }).reduce((arr,el)=>{\r\n    return arr.concat(el)\r\n  },[]);\r\n  if(tranformedIngridient.length===0)\r\n  {\r\n    tranformedIngridient=<p>Please start adding ingredients!</p>\r\n  }\r\n \r\n  \r\n  return(\r\n    <div className={classes.Burger}>\r\n    <BurgerIngridient type=\"bread-top\"/>\r\n     {tranformedIngridient}\r\n    <BurgerIngridient type=\"bread-buttom\"/>\r\n    </div>    \r\n  )\r\n\r\n}\r\n\r\nburger.propTypes={\r\n  ingridients: propTypes.object,\r\n  \r\n}\r\n\r\nexport default burger","import React from 'react'\r\nimport classes from './BuildControl.css'\r\nimport propTypes from 'prop-types';\r\n\r\nconst buildControl=(props)=>(\r\n  <div className={classes.BuildControl}>\r\n    <div className={classes.Label}>{props.label}</div>\r\n    <button onClick={()=>props.removeIngridients(props.label)} className={classes.Less}>Less</button>\r\n    <button onClick={()=>props.addIngridients(props.label)} className={classes.More}>More</button>\r\n  </div>\r\n);\r\n\r\nbuildControl.propTypes={\r\n  label: propTypes.string,\r\n  click: propTypes.func\r\n}\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nconst controls = [\r\n  { label: 'Salad', type: 'salad' },\r\n  { label: 'Bacon', type: 'bacon' },\r\n  { label: 'Cheese', type: 'cheese' },\r\n  { label: 'Meat', type: 'meat' }\r\n];\r\n\r\n\r\nconst buildControls = (props) => {\r\n\r\n  return <div className={classes.BuildControls}>\r\n\r\n    <p>\r\n      <strong>\r\n        Current Price: {props.price.toFixed(2)}\r\n      </strong>\r\n    </p>\r\n    {\r\n      controls.map((control) => (\r\n        <BuildControl removeIngridients={props.removeIngridients} addIngridients={props.addIngridients} key={control.label} label={control.label}></BuildControl>\r\n      ))\r\n    }\r\n\r\n    <button\r\n      onClick={props.showModal}\r\n      className={classes.OrderButton}\r\n      disabled={!props.purchasable}>{props.isAuth ? \"ORDER NOW\" : \"SING UP TO ORDER\"}\r\n    </button>\r\n\r\n  </div>\r\n\r\n\r\n}\r\n\r\nbuildControls.propTypes = {\r\n  price: propTypes.number,\r\n  click: propTypes.func,\r\n  showModal: propTypes.func,\r\n  purchasable: propTypes.bool\r\n}\r\nexport default buildControls","import React, {Component} from 'react'\r\nimport classes from './Modal.css'\r\nimport Auxiliary from '../../../hoc/Auxiliary'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\nimport propTypes from 'prop-types';\r\n\r\nclass Modal extends Component{\r\n\r\n  shouldComponentUpdate(nextProps,nextState){\r\n    return nextProps.show!==this.props.show || !this.props.showSpinner;\r\n  }\r\n\r\n  render(){\r\n    return( \r\n    <Auxiliary>\r\n      <Backdrop show={this.props.show} clicked={this.props.clicked}/>\r\n        <div className={classes.Modal}\r\n            style={{\r\n              transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n              opacity: this.props.show? '1': '0'\r\n            }}\r\n        >\r\n        {this.props.children}\r\n        </div>\r\n    </Auxiliary>\r\n    )\r\n  }\r\n}\r\n \r\n  \r\n\r\nModal.propTypes={\r\n  show: propTypes.bool\r\n}\r\nexport default Modal","import React from 'react'\r\nimport classes from './Button.css'\r\nimport propTypes from 'prop-types';\r\n\r\nconst button=(props)=>\r\n{\r\n  return <button\r\n  disabled={props.disabled}\r\n  className={[classes.Button,classes[props.btnType]].join(' ')}\r\n  onClick={props.clicked}>\r\n  {props.children}</button>\r\n}\r\n\r\nbutton.propTypes={\r\n  btnType: propTypes.string,\r\n  clicked: propTypes.func,\r\n  \r\n}\r\nexport default button","import React from 'react'\r\nimport Auxiliary from '../../../hoc/Auxiliary'\r\nimport Button from '../../UI/Button/Button'\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nconst orderSummary=(props)=>{\r\n  const tranformedIngridiients= props.ingridients;\r\n  return (\r\n    \r\n    <Auxiliary>\r\n      \r\n      <h3>Your Order</h3>\r\n      <p>A delicious burger with the following ingredients</p>\r\n      <ul>\r\n        {\r\n          Object.keys(tranformedIngridiients).map(key=>{\r\n            return <li key={key}>\r\n              <span \r\n                style={{textTranform:'capitalize'}}>\r\n                {key}: {tranformedIngridiients[key]}\r\n              </span>\r\n            </li>\r\n          })\r\n        }\r\n      </ul>\r\n      <strong>Total Price {props.totalPrice.toFixed(2)}</strong>\r\n      <p>Continue to Checkout?</p>\r\n      <Button clicked={props.cancel} btnType=\"Danger\">CANCEL</Button>\r\n      <Button clicked={props.continue} btnType=\"Success\">CONTINUE</Button>\r\n\r\n    </Auxiliary>\r\n  )\r\n}\r\n\r\norderSummary.propTypes={\r\n  totalPrice: propTypes.number,\r\n  ingridients: propTypes.object,\r\n  cancel: propTypes.func,\r\n  continue: propTypes.func\r\n\r\n}\r\nexport default orderSummary;","import React from 'react'\r\nimport classes from './Spinner.css'\r\n\r\nconst spinner =()=>(<div className={classes.loader}>Loading</div>)\r\n\r\nexport default spinner","import axios from 'axios'\r\n\r\nconst instance= axios.create({\r\n  baseURL: 'https://react-my-burger-cd0c0.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\n\r\n\r\n\r\nexport const post_order_success=(id,orderData)=>{\r\n  return{\r\n    type: actionTypes.POST_ORDER_SUCCESS,\r\n    orderId: id,\r\n    orderData:orderData\r\n  }\r\n\r\n}\r\n\r\nexport const post_order_failed=(err)=>{\r\n  return{\r\n    type: actionTypes.POST_ORDER_FAILED,\r\n    error:err\r\n  }\r\n}\r\n\r\nexport const post_order_start=()=>{\r\n  return{\r\n    type: actionTypes.POST_ORDERS_START\r\n  }\r\n  \r\n}\r\n\r\nexport const post_order=(order,token)=>{\r\n  return dispatch=>{\r\n    dispatch(post_order_start())\r\n    axios.post('/orders.json?auth='+token,order)\r\n    .then(res=>{\r\n      dispatch(post_order_success(res.data,order))\r\n    })\r\n    .catch((err)=>{\r\n      \r\n      dispatch(post_order_failed(err))\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const purchase_init=()=>{\r\n  return{\r\n    type: actionTypes.PURCHASE_INIT,\r\n  }\r\n}\r\n\r\nexport const fetch_orders=()=>{\r\n  return{\r\n    type: actionTypes.FETCH_ORDERS\r\n  }\r\n}\r\n\r\nexport const get_orders=(token,id)=>{\r\n  return dispatch=>{\r\n    dispatch(fetch_orders())\r\n    const quaryParams='?auth='+token+'&orderBy=\"userId\"&equalTo=\"'+id+'\"';\r\n    axios.get('/orders.json'+quaryParams)\r\n    .then(res=>{\r\n      dispatch(fetch_order_success(res.data))\r\n    })\r\n    .catch((err)=>{\r\n      dispatch(fetch_order_failed(err))\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport const fetch_order_success=(res)=>{\r\n  return{\r\n    type: actionTypes.FETCH_ORDER_SUCCESS,\r\n    orders: res\r\n  }\r\n}\r\nexport const fetch_order_failed=(err)=>{\r\n  return{\r\n    type: actionTypes.FETCH_ORDER_FAILED,\r\n    error:err\r\n  }\r\n}\r\n","export const ADD_INGRIDIENT= 'ADD_INGRIDIENT'\r\nexport const REMOVE_INGRIDIENT= 'REMOVE_INGRIDIENT'\r\nexport const GET_INGRIDIENT= 'GET_INGRIDIENT'\r\nexport const FETCH_INGRIDIENTS_FAILED='FETCH_INGRIDIENTS_FAILED'\r\n\r\nexport const POST_ORDER_FAILED= 'POST_ORDER_FAILED'\r\nexport const POST_ORDER_SUCCESS= 'POST_ORDER_SUCCESS'\r\nexport const POST_ORDERS_START= 'POST_ORDERS_START'\r\nexport const PURCHASE_INIT= 'PURCHASE_INIT'\r\nexport const FETCH_ORDERS= 'FETCH_ORDERS'\r\nexport const FETCH_ORDER_SUCCESS= 'FETCH_ORDER_SUCCESS'\r\nexport const FETCH_ORDER_FAILED= 'FETCH_ORDER_FAILED'\r\n\r\nexport const AUTH_START= 'AUTH_START'\r\nexport const AUTH_SUCCESS= 'AUTH_SUCCESS'\r\nexport const AUTH_FAILED= 'AUTH_FAILED'\r\nexport const AUTH_LOGOUT= 'AUTH_LOGOUT'\r\n\r\n\r\n\r\n","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const logIn = (email, pass, isSingUp ) => {\r\n  return dispatch => {\r\n    dispatch(auth_start());\r\n    const authData = {\r\n      email: email,\r\n      password: pass,\r\n      returnSecureToken: true\r\n    }\r\n    let url= 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyD1nTAd3tfOBK31NeIHeCS38E5fpvysbdw';\r\n    if(!isSingUp){\r\n      url= 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyD1nTAd3tfOBK31NeIHeCS38E5fpvysbdw';\r\n\r\n    }\r\n    axios.post(url, authData)\r\n      .then(res => {\r\n        const experationDate= new Date( new Date().getTime()+res.data.expiresIn * 1000)\r\n        localStorage.setItem(\"token\", res.data.idToken)\r\n        localStorage.setItem(\"experationDate\", experationDate)\r\n        localStorage.setItem(\"userId\", res.data.localId)\r\n\r\n        dispatch(auth_success(res.data.idToken,res.data.localId));\r\n        dispatch(checkAuthTimeout(res.data.expiresIn))\r\n\r\n      })\r\n      .catch(err => dispatch(auth_failed(err.response.data.error)))\r\n  }\r\n\r\n\r\n}\r\nexport const auth_start = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  }\r\n}\r\nexport const auth_success = (token,userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId\r\n\r\n  }\r\n}\r\nexport const auth_failed = (err) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAILED,\r\n    error: err\r\n  }\r\n}\r\n\r\nexport const checkAuthTimeout=(expiresIn)=>{\r\n  return dispatch=>{\r\n    setTimeout(()=>{\r\n      dispatch(logout());\r\n    },expiresIn * 1000)\r\n  }\r\n}\r\n\r\n\r\nexport const logout=()=>{\r\n  localStorage.removeItem(\"token\")\r\n  localStorage.removeItem(\"experationDate\")\r\n  localStorage.removeItem(\"userId\")\r\n\r\n  return{\r\n    type: actionTypes.AUTH_LOGOUT\r\n  }\r\n}\r\n\r\nexport const authCheckState=()=>{\r\n  return dispatch=>{\r\n    const token= localStorage.getItem('token');\r\n    if(!token){\r\n      dispatch(logout())\r\n    } else {\r\n      const experationDate= new Date(localStorage.getItem('experationDate'));\r\n      if(experationDate> new Date())\r\n      {\r\n        const userId= localStorage.getItem('userId')\r\n        dispatch(auth_success(token, userId))\r\n        dispatch(checkAuthTimeout(\r\n          (experationDate.getTime() -new Date().getTime())/1000))\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    } \r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Auxiliary from '../../hoc/Auxiliary'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummery/OrderSummery'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index'\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    purchasable: false,\r\n    showModal: false,\r\n    showSpinner: false\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onInitIngridients();\r\n  }\r\n  updatePurchaseState() {\r\n    const ingridients = { ...this.props.ings };\r\n    const sum = Object.keys(ingridients)\r\n      .map(igKey => {\r\n        return ingridients[igKey];\r\n      }).reduce((sum, el) => {\r\n        return sum += el;\r\n      }, 0)\r\n    return sum > 0\r\n  }\r\n\r\n\r\n  showModalHandler = () => {\r\n    if (this.props.isAuth) {\r\n      this.setState({\r\n        showModal: true\r\n      })\r\n\r\n    }\r\n    else{\r\n   \r\n      this.props.history.push(\"/auth\")\r\n    }\r\n    \r\n  }\r\n\r\n  purchaseCancelHandler = () => {\r\n    this.setState({ showModal: false })\r\n  }\r\n  purchaseContinuelHandler = () => {\r\n    this.props.onInitPurchased();\r\n    this.props.history.push('/checkout')\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    let modal = null;\r\n    let burger = null;\r\n\r\n    if (this.props.error || this.props.ings === null) {\r\n      if (this.props.error) {\r\n        modal = <p>Ingridients can't be loaded!</p>\r\n\r\n      }\r\n      else {\r\n        modal = <Spinner></Spinner>\r\n      }\r\n\r\n    }\r\n    else {\r\n      \r\n      modal =\r\n        (\r\n          <Modal show={this.state.showModal}>\r\n            <OrderSummary\r\n              totalPrice={this.props.tPrice}\r\n              cancel={this.purchaseCancelHandler}\r\n              continue={this.purchaseContinuelHandler}\r\n              ingridients={this.props.ings}\r\n            ></OrderSummary>\r\n          </Modal>\r\n        )\r\n      burger = (\r\n        <Auxiliary>\r\n          <Burger ingridients={this.props.ings}></Burger>\r\n          <BuildControls\r\n            isAuth={this.props.isAuth}\r\n            addIngridients={(label) => this.props.onAddIngridients(label)}\r\n            removeIngridients={(label) => this.props.onRemoveIngridients(label)}\r\n            ingridients={this.props.ings}\r\n            price={this.props.tPrice}\r\n            purchasable={this.updatePurchaseState()}\r\n            showModal={this.showModalHandler}\r\n          >\r\n          </BuildControls>\r\n        </Auxiliary>\r\n\r\n\r\n      )\r\n\r\n\r\n    }\r\n    return (\r\n      <Auxiliary>\r\n       {modal}\r\n       {burger}\r\n      </Auxiliary>\r\n\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingridients,\r\n    tPrice: state.burgerBuilder.totalPrice,\r\n    error: state.burgerBuilder.error,\r\n    isAuth: state.auth.token != null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddIngridients: (label) => dispatch(actions.add_ingridients(label, INGREDIENT_PRICES[label.toLowerCase()])),\r\n    onRemoveIngridients: (label) => dispatch(actions.remove_ingridients(label, INGREDIENT_PRICES[label.toLowerCase()])),\r\n    onInitIngridients: () => {\r\n      dispatch(actions.init_ingridients())\r\n    },\r\n    onInitPurchased: () => dispatch(actions.purchase_init())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BurgerBuilder);","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\n\r\n\r\n\r\nexport const add_ingridients=(label, price)=>{\r\n  return {\r\n    type: actionTypes.ADD_INGRIDIENT,\r\n    ingridientName: label,\r\n    price: price\r\n  }\r\n}\r\n\r\nexport const remove_ingridients=(label, price)=>{\r\n  return {\r\n    type: actionTypes.REMOVE_INGRIDIENT,\r\n    ingridientName: label,\r\n    price: price\r\n  }\r\n}\r\nexport const get_ingridients=(res)=>{\r\n  return{\r\n    type: actionTypes.GET_INGRIDIENT,\r\n    ingridients: res\r\n  }\r\n}\r\n\r\nexport const fetch_ingridients_fauled=()=>{\r\n  return{\r\n    type: actionTypes.FETCH_INGRIDIENTS_FAILED,\r\n  }\r\n}\r\n\r\nexport const init_ingridients=()=>{\r\n  return dispatch=>{\r\n    axios.get('/ingridients.json')\r\n    .then(res=>{\r\n      dispatch(get_ingridients(res.data))\r\n    })\r\n    .catch((err)=>{\r\n      dispatch(fetch_ingridients_fauled())\r\n    })\r\n  }\r\n\r\n}","import React from 'react'\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\nimport classes from './CheckOutSummary.css'\r\n\r\nconst checkOutSummary=(props)=>{\r\n  return <div className={classes.CheckOutSummary}>\r\n    <h1>We hope it tastes well!!</h1>\r\n    <div style={{width:'100%', height:'300px', margin:'auto'}}>\r\n      <Burger ingridients={props.ingridients}></Burger>\r\n    </div>\r\n    <Button clicked={props.onCheckoutCancelled} btnType=\"Danger\">CANCEL</Button>\r\n    <Button clicked={props.onCheckoutContinued} btnType=\"Success\">CONTINUE</Button>\r\n  </div>\r\n}\r\n\r\nexport default checkOutSummary","import React from 'react'\r\nimport classes from './Input.css'\r\nconst input = (props) => {\r\n  const classValidation=[classes.InputElement];\r\n  let inputElement = null;\r\n  if(props.invalid&&props.touched){\r\n    classValidation.push(classes.Invalid)\r\n  }\r\n  switch (props.elementType) {\r\n    case ('input'):\r\n      inputElement =\r\n        <input\r\n          className={classValidation.join(' ')}\r\n          onChange={props.changed}\r\n          {...props.elementConfig}\r\n          value={props.value} />\r\n      break;\r\n\r\n    case ('textarea'):\r\n      inputElement =\r\n        <input\r\n          className={classValidation.join(' ')}\r\n          onChange={props.changed}\r\n          {...props.elementConfig}\r\n          value={props.value} />\r\n      break;\r\n\r\n    case ('select'):\r\n      inputElement =\r\n        <select\r\n          className={classValidation.join(' ')}\r\n          value={props.value}\r\n          onChange={props.changed}>\r\n          {\r\n            props.elementConfig.options.map(option => (\r\n              <option\r\n                key={option.value}\r\n                value={option.value}>\r\n                {option.displeyValue}\r\n              </option>\r\n            ))\r\n          }\r\n        </select>\r\n      break;\r\n\r\n    default:\r\n      inputElement =\r\n        <input\r\n          className={classes.InputElement}\r\n          onChange={props.changed}\r\n          {...props.elementConfig}\r\n          value={props.value} />\r\n  }\r\n\r\n\r\n  return (<div className={classes.Input}>\r\n    <label className={classes.Label}>{props.labael}</label>\r\n    {inputElement}\r\n  </div>\r\n  )\r\n\r\n}\r\n\r\nexport default input\r\n","export const updateObject=(oldObject, updatedProperties)=>{\r\n  return{\r\n    ...oldObject,\r\n    ...updatedProperties\r\n  }\r\n}\r\n\r\nexport const checkValidity =(value,rules)=>{\r\n  let isValid=true;\r\n  if(rules.required){\r\n    isValid=value.trim()!=='' && isValid\r\n  }\r\n  if(rules.minLength){\r\n    isValid=value.length>=rules.minLength && isValid\r\n  }\r\n  if(rules.maxLength){\r\n    isValid=value.length<=rules.maxLength && isValid\r\n  }\r\n  return isValid\r\n}","import React, { Component } from 'react'\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport classes from './ContactData.css'\r\nimport Spinner from '../../../components/UI/Spinner/Spinner'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index'\r\nimport {checkValidity} from '../../../shared/utility'\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your name'\r\n        },\r\n        value: '',\r\n        valudation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      street: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Street'\r\n        },\r\n        value: '',\r\n        valudation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      zipCode: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Zip Code'\r\n        },\r\n        value: '',\r\n        valudation: {\r\n          required: true,\r\n          minLength:5,\r\n          maxLength: 5\r\n        },\r\n        valid: false,\r\n        touched: false\r\n\r\n      },\r\n      country: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Country'\r\n        },\r\n        value: '',\r\n        valudation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          placeholder: 'Your Email'\r\n        },\r\n        value: '',\r\n        valudation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      deliveryMethod: {\r\n        elementType: 'select',\r\n        elementConfig: {\r\n          options: [\r\n            { value: 'fastest', displeyValue: 'Fastest' },\r\n            { value: 'cheapest', displeyValue: 'Cheapest' }\r\n          ]\r\n        },\r\n        valudation:{},\r\n        value: 'fastest',\r\n        valid: true,\r\n\r\n      },\r\n\r\n    },\r\n    formIsValid: false,\r\n    // loading: false\r\n  }\r\n\r\n  orderHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const fromData={};\r\n    for(let formElementIdentifier in this.state.orderForm){\r\n      fromData[formElementIdentifier]=this.state.orderForm[formElementIdentifier].value\r\n    }\r\n    const order = {\r\n      ingridients: this.props.ings,\r\n      price: this.props.tPrice,\r\n      orderData: fromData,\r\n      userId: this.props.userId\r\n    }\r\n\r\n    this.props.onPostOrder(order,this.props.token)\r\n\r\n  }\r\n\r\n\r\n  changeInputHandler=(event, inputIdentifier)=>{\r\n    const updatesOrderForm={\r\n      ...this.state.orderForm\r\n    }\r\n    const updateFormElement= {\r\n      ...updatesOrderForm[inputIdentifier]\r\n    }\r\n    updateFormElement.value=event.target.value;    \r\n    updateFormElement.touched=true;\r\n\r\n    updateFormElement.valid=checkValidity(updateFormElement.value,updateFormElement.valudation)\r\n    updatesOrderForm[inputIdentifier]=updateFormElement;\r\n    let formIsValid=true;\r\n    for(let inputIdentifier in updatesOrderForm){\r\n      formIsValid= updatesOrderForm[inputIdentifier].valid && formIsValid\r\n    }\r\n    this.setState({orderForm:updatesOrderForm, formIsValid:formIsValid})\r\n  }\r\n\r\n\r\n  render() {\r\n    let formElementArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      })\r\n    }\r\n    let form = <form onSubmit={this.orderHandler}>\r\n      {\r\n        formElementArray.map(formElement => (\r\n          <Input\r\n            invalid={!formElement.config.valid}\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            changed={(event)=>this.changeInputHandler(event,formElement.id)}\r\n            touched={formElement.config.touched}>           \r\n          </Input>\r\n        ))\r\n      }\r\n      <Button btnType='Success' disabled={!this.state.formIsValid}>ORDER</Button>\r\n    </form>;\r\n    if (this.props.loading) {\r\n      form = <Spinner></Spinner>\r\n    }\r\n    return (\r\n      <div className={classes.ContactData}>\r\n        <h4>Enter yout Contact Data</h4>\r\n        {form}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      ings: state.burgerBuilder.ingridients,\r\n      tPrice: state.burgerBuilder.totalPrice,\r\n      orders: state.orders.orders,\r\n      loading: state.orders.loading,\r\n      token: state.auth.token,\r\n      userId: state.auth.userId\r\n  };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onPostOrder:(order,token)=>dispatch(actions.post_order(order,token))\r\n \r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(ContactData))","import React, { Component } from 'react'\r\nimport CheckOutSummary from '../../components/Order/CheckOutSummary/CheckOutSummary'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport ContactData from '../../containers/CheckOut/ContactData/ContactData'\r\nimport { connect } from 'react-redux'\r\n\r\nclass CheckOut extends Component {\r\n\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  }\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace('/checkout/contact-data');\r\n  }\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\"></Redirect>\r\n    if (this.props.ings) {\r\n      const purchasedRedirect=this.props.purchased ? <Redirect to=\"/\"/> : null\r\n      summary = (<div>\r\n        {purchasedRedirect}\r\n        <CheckOutSummary\r\n          ingridients={this.props.ings}\r\n          onCheckoutCancelled={this.checkoutCancelledHandler}\r\n          onCheckoutContinued={this.checkoutContinuedHandler}\r\n        >\r\n        </CheckOutSummary>\r\n        <Route path={this.props.match.path + '/contact-data'} component={ContactData} ></Route></div>\r\n      )\r\n    }\r\n    return <div>\r\n      {summary}\r\n\r\n    </div>\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingridients,\r\n    purchased: state.orders.purchased\r\n  };\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(CheckOut)","import React from 'react'\r\nimport classes from './Order.css'\r\nconst order=(props)=>{\r\n  let ingridients=[];\r\n  for(let ingridientsName in props.ingridients){\r\n    ingridients.push({\r\n      name: ingridientsName, amount: props.ingridients[ingridientsName]\r\n    });\r\n\r\n  }\r\n\r\n  const ingridientsOutput= ingridients.map(ig=>{\r\n    return(<span key={ig.name}>{ig.name} ({ig.amount})</span>)\r\n  })\r\n\r\n  return(\r\n    <div className={classes.Order}>\r\n    <p>Ingridients: {ingridientsOutput}</p>\r\n    <p>Price <strong>USD {props.price}</strong></p>\r\n  </div>\r\n  \r\n  )\r\n}\r\n  \r\n\r\n\r\n\r\nexport default order","import React, {Component} from 'react'\r\nimport Order from '../../components/Order/Order'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport * as actions from '../../store/actions/index'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Orders extends Component{\r\n\r\n  state={\r\n    orders:[],\r\n    loading: false,\r\n  }\r\n  componentWillMount(){\r\n    console.log(this.props.userId+\"    userid\")\r\n    console.log(this.props.token+\"    token\")\r\n\r\n    this.props.onFetchOrders(this.props.token,this.props.userId);\r\n\r\n  }\r\n\r\n  render(){\r\n    let orders= this.props.orders.map(order=><Order key={order.id} price={order.price} ingridients={order.ingridients}/>)\r\n    if(this.props.loading){\r\n      orders=<Spinner/>\r\n    }\r\n\r\n    return (<div>\r\n      {orders}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      orders: state.orders.orders,\r\n      loading: state.orders.loading,\r\n      token: state.auth.token,\r\n      userId: state.auth.userId\r\n  };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchOrders:(token,id)=>dispatch(actions.get_orders(token,id))\r\n \r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Orders)","import React, { Component } from 'react'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport classes from './Auth.css'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {checkValidity} from '../../shared/utility'\r\n\r\n\r\nclass Auth extends Component {\r\n\r\n  state = {\r\n    authForm: {\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          placeholder: 'Your email'\r\n        },\r\n        value: '',\r\n        valudation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n\r\n      password: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'password',\r\n          placeholder: 'Your password'\r\n        },\r\n        value: '',\r\n        valudation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n    },\r\n    formIsValid: false,\r\n    isSingup: true\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onLogIn(this.state.authForm.email.value, this.state.authForm.password.value, this.state.isSingup)\r\n  }\r\n\r\n\r\n\r\n  changeInputHandler = (event, inputIdentifier) => {\r\n    const updatesAuthForm = {\r\n      ...this.state.authForm\r\n    }\r\n    const updateFormElement = {\r\n      ...updatesAuthForm[inputIdentifier]\r\n    }\r\n    updateFormElement.value = event.target.value;\r\n    updateFormElement.touched = true;\r\n    updateFormElement.valid = checkValidity(updateFormElement.value, updateFormElement.valudation)\r\n    updatesAuthForm[inputIdentifier] = updateFormElement;\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatesAuthForm) {\r\n      formIsValid = updatesAuthForm[inputIdentifier].valid && formIsValid\r\n    }\r\n    this.setState({ authForm: updatesAuthForm, formIsValid: formIsValid })\r\n  }\r\n\r\n  swichAuthModeHandler = () => {\r\n    this.setState(prevState => {\r\n      return { isSingup: !prevState.isSingup }\r\n    })\r\n  }\r\n  render() {\r\n\r\n\r\n\r\n    let spinner = null\r\n    if (this.props.loading) {\r\n      spinner = <Spinner></Spinner>\r\n    }\r\n\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n      errorMessage = (\r\n        <p>{this.props.error.message}</p>\r\n      )\r\n    }\r\n\r\n\r\n    let formElementArray = [];\r\n    for (let key in this.state.authForm) {\r\n      formElementArray.push({\r\n        id: key,\r\n        config: this.state.authForm[key]\r\n      })\r\n    }\r\n\r\n    let form =\r\n      formElementArray.map(formElement => (\r\n        <Input\r\n          invalid={!formElement.config.valid}\r\n          key={formElement.id}\r\n          elementType={formElement.config.elementType}\r\n          elementConfig={formElement.config.elementConfig}\r\n          value={formElement.config.value}\r\n          changed={(event) => this.changeInputHandler(event, formElement.id)}\r\n          touched={formElement.config.touched}>\r\n          ></Input>\r\n      ))\r\n\r\n    let authResirect = null;\r\n    if (this.props.isAuth && this.props.isOrder) {\r\n      authResirect = <Redirect to=\"/checkout\" />;\r\n    }\r\n    else if (this.props.isAuth && !this.props.isOrder) {\r\n        authResirect = <Redirect to=\"/\" />;\r\n      \r\n    }\r\n  \r\n\r\n    return <div className={classes.Auth}>\r\n      {errorMessage}\r\n      <h4>Fill Your Details</h4>\r\n      {authResirect}\r\n      {spinner}\r\n      <form onSubmit={this.submitHandler}>\r\n        {form}\r\n        <Button btnType='Success' disabled={!this.state.formIsValid}>Submit</Button>\r\n      </form>\r\n      <Button clicked={this.swichAuthModeHandler} btnType='Danger'>SWITCH TO {this.state.isSingup ? 'SINGIN' : 'SINGUP'}</Button>\r\n\r\n    </div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuth: state.auth.token != null,\r\n    isOrder: state.burgerBuilder.isOrder\r\n  };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogIn: (email, password, isSingup) => dispatch(actions.logIn(email, password, isSingup))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../../store/actions/index'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Logout extends Component{\r\n  componentDidMount(){\r\n    this.props.onLogout();\r\n  }\r\n  render(){\r\n    return(<Redirect to={'/'}/>)\r\n  }\r\n} \r\n\r\nconst mapDispatchToProps= dispatch=>{\r\n  return{\r\n    onLogout: ()=>dispatch(actions.logout())\r\n  }\r\n}\r\nexport default connect(null,mapDispatchToProps)(Logout)","import React, { Component } from 'react';\nimport './App.css';\nimport Layout from './hoc/Layout/Layout'\nimport BuregerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport CheckOut from './containers/CheckOut/CheckOut'\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport Orders from './containers/Orders/Orders'\nimport Auth from './containers/Auth/Auth'\nimport LogOut from './containers/Auth/Logout/Logout'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions/index'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onCheckAuth();\n  }\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth}></Route>\n        <Route path=\"/\" exact component={BuregerBuilder}></Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n    if (this.props.isAuth) {\n      routes = (<Switch>\n        <Route path=\"/checkout\" component={CheckOut}></Route>\n        <Route path=\"/orders\" component={Orders}></Route>\n        <Route path=\"/logout\" component={LogOut}></Route>\n        <Route path=\"/\" exact component={BuregerBuilder}></Route>\n        <Route path=\"/auth\" component={Auth}></Route>\n\n        <Redirect to=\"/\" />\n      </Switch>)\n    }\n    return (\n      <div>\n        <Layout>\n          {routes}\n\n        </Layout>\n        <br></br>\n        <br></br>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.token !==null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCheckAuth: () => dispatch(actions.authCheckState())\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../../shared/utility'\r\n\r\nconst initialState = {\r\n  totalPrice: 4,\r\n  ingridients: null,\r\n  error: false,\r\n  isOrder: false\r\n\r\n};\r\n\r\nconst addIngridient = (state, action) => {\r\n  const updatedIngridient = { [action.ingridientName.toLowerCase()]: (state.ingridients[action.ingridientName.toLowerCase()]) + 1 }\r\n  const updatedIngridients = updateObject(state.ingridients, updatedIngridient)\r\n  const updatedState = { ingridients: updatedIngridients, totalPrice: state.totalPrice + action.price, isOrder:true }\r\n  return updateObject(state, updatedState)\r\n\r\n}\r\n\r\nconst removeIngridient = (state, action) => {\r\n  if (state.totalPrice > 4) {\r\n    console.log(state.totalPrice)\r\n    const updatedIngridient = { [action.ingridientName.toLowerCase()]: (state.ingridients[action.ingridientName.toLowerCase()]) - 1 }\r\n    const updatedIngridients = updateObject(state.ingridients, updatedIngridient)\r\n    const updatedState = { ingridients: updatedIngridients, totalPrice: state.totalPrice - action.price,isOrder:true }\r\n    return updateObject(state, updatedState)\r\n  }\r\n\r\n}\r\n\r\nconst getIngridients = (state, action) => {\r\n  return updateObject(state, {\r\n    ingridients: {\r\n      salad: action.ingridients.salad,\r\n      bacon: action.ingridients.bacon,\r\n      cheese: action.ingridients.cheese,\r\n      meat: action.ingridients.meat\r\n    },\r\n    totalPrice: 4,\r\n    error: false,\r\n    isOrder:false\r\n  })\r\n\r\n\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case (actionTypes.ADD_INGRIDIENT): return addIngridient(state, action);\r\n    case (actionTypes.REMOVE_INGRIDIENT): return removeIngridient(state, action)\r\n    case (actionTypes.GET_INGRIDIENT): return getIngridients(state, action)\r\n    case (actionTypes.FETCH_INGRIDIENTS_FAILED): return updateObject(state, { error: true })\r\n    default: return state;\r\n  }\r\n\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../../shared/utility'\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n  const orders = [];\r\n  for (let i in action.orders) {\r\n    orders.push({ ...action.orders[i], id: i })\r\n  }\r\n  return updateObject(state, { loading: false, orders: orders })\r\n}\r\nconst postOrderSuccess = (state, action) => {\r\n  const order = {\r\n    ...action.orderData,\r\n    id: action.orderId,\r\n  }\r\n  return updateObject(state, { loading: false, orders: state.orders.concat(order), purchased: true })\r\n}\r\n\r\nconst postOrder = (state, action) => {\r\n  return updateObject(state, { loading: true })\r\n}\r\n\r\nconst fetchOrderFailed = (state, action) => {\r\n  return updateObject(state, { loading: false })\r\n}\r\n\r\nconst purchaseInit = (state, action) => {\r\n  return updateObject(state, { loading: false })\r\n}\r\n\r\nconst postOrderFailed = (state, action) => {\r\n  updateObject(state, { loading: false })\r\n}\r\n\r\nconst postOrderStart = (state, action) => {\r\n  return updateObject(state, { loading: true })\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case (actionTypes.FETCH_ORDERS): return postOrder(state,action)\r\n    case (actionTypes.FETCH_ORDER_SUCCESS): return fetchOrdersSuccess(state, action)\r\n    case (actionTypes.FETCH_ORDER_FAILED): fetchOrderFailed(state,action)\r\n    case (actionTypes.PURCHASE_INIT): return purchaseInit(state,action) \r\n    case (actionTypes.POST_ORDER_SUCCESS): return postOrderSuccess(state,action)\r\n    case (actionTypes.POST_ORDER_FAILED): return postOrderFailed(state,action)\r\n    case (actionTypes.POST_ORDERS_START):return postOrderStart(state,action)\r\n    default: return state \r\n  }\r\n\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../../shared/utility'\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false\r\n}\r\n\r\n\r\nconst authStart=(state, action)=>{\r\n  return updateObject(state, { loading: true, error: null })\r\n}\r\n\r\nconst authSuccess=(state, action)=>{\r\n  return updateObject(state, \r\n    { \r\n      loading: false, \r\n      error: null,\r\n      token: action.idToken,\r\n      userId: action.userId\r\n     })\r\n}\r\n\r\nconst authFailed=(state, action)=>{\r\n  return updateObject(state, { loading: false, error: action.error })\r\n}\r\n\r\nconst authLogout=(state,action)=>{\r\n  return updateObject(state, {token:null, userId:null})\r\n}\r\n\r\nconst reducer = (state= initialState, action) => {\r\n  switch (action.type) {\r\n    case (actionTypes.AUTH_START): return authStart(state, action)\r\n    case (actionTypes.AUTH_SUCCESS): return authSuccess(state, action)\r\n    case (actionTypes.AUTH_FAILED): return authFailed(state, action)\r\n    case (actionTypes.AUTH_LOGOUT): return authLogout(state,action)\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, compose, combineReducers, applyMiddleware} from 'redux'\nimport burgerBuilderReducer from './store/reducers/burgerBuilder'\nimport ordersReducer from './store/reducers/orders'\nimport thunk from 'redux-thunk'\nimport AuthReducer from './store/reducers/auth'\n\nconst rootReducer= combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  orders: ordersReducer,\n  auth: AuthReducer\n})\n\nconst composeEnhancers =process.env.NODE_ENV==='development' ?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null|| compose;\n\nconst logger=store=>{\n  return next=>{\n    return action=>{\n      const resault=next(action);\n      return resault;\n    }\n  }\n}\n\nconst store= createStore(rootReducer,composeEnhancers(applyMiddleware(logger,thunk)));\n\nconst app= \n<Provider store={store}>\n<BrowserRouter>\n  <App/>\n</BrowserRouter>\n</Provider>\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";"],"sourceRoot":""}